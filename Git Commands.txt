for generating SSH Key - (Already done for my account)
1) $ ssh-keygen -t rsa -b 4096 -C "youremail@example.com"
2) $ cat <path on which above key saved>

---> copy that key and paste in GitHub SSH key.
_______________________________________________________________

For uploading project through repositories - 
$ git config --global user.name Prajwal
$ git config --global user.email prajwalpchunarkar@gmail.com

1) git init                                                -----> create hidden .git folder
2) git status                                           ----> to check initial status()
3) git add .                                             ----> this will upload all files
4) git commit -m "Initial Commit"   
5) git status         
6) git remote add origin <SSH url.git >                  //do not include  < > this                        (For already exist origin -->[ git remote set-url origin <SSH url.git > ])
7) git push origin master                                ----> push all folders on GitHUb      // if errror add ( -- force)

now check on Github all files successfully shown.
_______________________________________________________________
 
For updatation(adding extra file) -
1) $ git add .
2) $ git commit -m "Added file_name"
3) $ git push origin master

________________________________________________________________

Extra Commands - 
touch .gitignore           -----> if some file or folder don't want to upload on gitHub which is present in folder(PC's)
$ tail <path to id_rsa.pub> # Add this key to your GitHub account

________________________________________________________________

git config --list                ---> all configurations we did 

git config --get user.name       --> display username

git config --get user.email      --> display email

________________________________________________________________

git clone (paste https url from github code)           --> we get any project files in our local folder saved as Git folder

_______________________________________________________________________________________

git branch branch_name             ---> create branch of branch_name

git checkout branch1               ---> move to beanch1
git checkout master                ---> move to master


If we create file inside beanch1 it will not display in master.
*inside master :  git pull origin branch1         --> pull files from branch1 to master

________________________________________________________________________________________

ls --> shows all files inside current (master or branch) 
ls -lart 

________________________________________________________________________________________

If accidently delete files -->
git checkout  --> shows files that can be recoverd means that last commited
git checkout -f --> recover all files that was last commited
______________________________________________________________________________________________________________________

If we made changes in files so before commiting that files in working area and last commited files in staging area. 
git diff       --> gives difference between files in working and stafing area files as changed text or code exact that part

______________________________________________________________________________________________________________________